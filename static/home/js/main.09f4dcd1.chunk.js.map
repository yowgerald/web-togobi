{"version":3,"sources":["Constants.js","components/ContentFile.js","components/Today.js","components/Top.js","components/Suggestion.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["config","url","API_URL","fileType","ContentFile","props","state","files","next_page","prev_page","this","getContentFiles","a","page","content","axios","get","params","then","response","setState","data","result","next","previous","catch","error","console","log","file_count","length","galleryClass","map","file","i","class_suffix","className","f_type","src","signed_url","alt","id","controls","onClick","handleLoadPrevious","handleLoadNext","Component","Today","contents_today","query","q","getContentsToday","title","Top","contents_top","getContentsTop","Suggestion","Content","contents","e","target","value","getContents","name","type","onChange","handleUpdateQuery","defaultValue","handleSearch","href","description","target_date","username","total_attendees","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09f4dcd1.chunk.js","sourcesContent":["const prod = {\r\n    url: {\r\n        API_URL: '',\r\n    }\r\n};\r\n\r\nconst dev = {\r\n    url: {\r\n        API_URL: 'http://localhost:8000'\r\n    }\r\n};\r\n\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;\r\nexport const fileType = {\r\n    IMAGE: 'Image',\r\n    VIDEO: 'Video'\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { config, fileType } from '../Constants';\r\n\r\nconst API_URL = config.url.API_URL;\r\n\r\nexport class ContentFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            files: [],\r\n            next_page: null,\r\n            prev_page: null,\r\n        };\r\n    }\r\n\r\n    handleLoadNext() {\r\n        this.getContentFiles(this.state.next_page);\r\n    }\r\n\r\n    handleLoadPrevious() {\r\n        this.getContentFiles(this.state.prev_page);\r\n    }\r\n\r\n    async getContentFiles(page = 1) {\r\n        var content = this.props.content;\r\n        await axios.get(API_URL+'/contents/'+content+'/content_files', \r\n            {\r\n                params: {\r\n                    page: page\r\n                }\r\n            }).then(response => {\r\n                this.setState({\r\n                    files: response.data.result,\r\n                    next_page: response.data.next,\r\n                    prev_page: response.data.previous\r\n                });\r\n            }).catch(error => {\r\n                console.log(error);\r\n                // TODO: may need to return something.\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getContentFiles();\r\n    }\r\n\r\n    render() {\r\n        var file_count = this.state.files.length;\r\n        var galleryClass = file_count > 1 ? 'gallery' : '';\r\n        var files = this.state.files.map((file, i) => {\r\n            // TODO: may need to use external player for video\r\n            // TODO: when item is clicked, should be fullscreen\r\n            var class_suffix = i + 1;\r\n            if (file_count < 5) {\r\n                if (file_count % 2 === 0 && (file_count === class_suffix)) {\r\n                    class_suffix += ' item__stretch';\r\n                } else if (file_count === 3 && (class_suffix === 2 || class_suffix === 3)) {\r\n                    class_suffix += ' item__stretch--'+class_suffix;\r\n                }\r\n            }\r\n            return [\r\n                <figure key={\"gallery__item\"+file.id} className={\"gallery__item gallery__item--\" + class_suffix}>\r\n                    {(() => {\r\n                        if (file.f_type === fileType.IMAGE){\r\n                            return (\r\n                              <img key={\"src\" + file.id} className=\"gallery__media\" src={file.signed_url} alt=\"\"/>\r\n                            );\r\n                        } else if(file.f_type === fileType.VIDEO) {\r\n                            return (\r\n                                <video key={\"src\" + file.id} className=\"gallery__media\" src={file.signed_url} alt=\"\" controls/>\r\n                            );\r\n                        }\r\n                        return null;\r\n                    })()}\r\n                </figure>\r\n            ];\r\n        });\r\n        \r\n        return [\r\n            <section key=\"gallery\" className={galleryClass}>\r\n                {files}\r\n            </section>,\r\n            <br key=\"gallery-load-break\"/>,\r\n            <div key=\"items-page\" className=\"items__page\">\r\n                {this.state.prev_page != null ?\r\n                    <div key=\"load-previous\" onClick={() => this.handleLoadPrevious()}>\r\n                        Previous\r\n                    </div>\r\n                : null}\r\n                {this.state.prev_page != null && this.state.next_page ? <span>&nbsp; &bull; &nbsp;</span> : null}\r\n                {this.state.next_page != null ?\r\n                    <div key=\"load-next\" onClick={() => this.handleLoadNext()}>\r\n                        Next\r\n                    </div>\r\n                : null}\r\n            </div>\r\n        ]\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { config } from '../Constants';\r\n\r\nconst API_URL = config.url.API_URL;\r\n\r\nexport class Today extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contents_today: []\r\n        };\r\n    }\r\n\r\n    async getContentsToday(query = null) {\r\n        await axios.get(API_URL+'/contents/today',\r\n            {\r\n                params: {\r\n                    q: query\r\n                }\r\n            }).then(response => {\r\n                this.setState({ contents_today: response.data })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getContentsToday();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row column\">\r\n                <p className=\"lead\">TODAY</p>\r\n                {this.state.contents_today.length > 0 ? \r\n                    this.state.contents_today.map((content) => {\r\n                        return (\r\n                            <p key={\"title\"+content.id}>{content.title}</p>\r\n                        )\r\n                    })\r\n                :\r\n                    <p>No items available yet.</p>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { config } from '../Constants';\r\n\r\nconst API_URL = config.url.API_URL;\r\n\r\nexport class Top extends Component {\r\n    \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            contents_top: [],\r\n        }\r\n    }\r\n\r\n    async getContentsTop(query = null) {\r\n        await axios.get(API_URL+'/contents/top',\r\n            {\r\n                params: {\r\n                    q: query\r\n                }\r\n            }).then(response => {\r\n                this.setState({ contents_top: response.data })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getContentsTop();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row column\">\r\n                <p className=\"lead\">TOP</p>\r\n                {this.state.contents_top.length > 0 ? \r\n                    this.state.contents_top.map((content) => {\r\n                        return (\r\n                            <p key={\"title\"+content.id}>{content.title}</p>\r\n                        )\r\n                    })\r\n                :\r\n                    <p>No items available yet.</p>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Today } from '../components/Today';\r\nimport { Top } from '../components/Top';\r\n\r\nexport class Suggestion extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"large-6 columns\">\r\n                <aside>\r\n                    <br/>\r\n                    <Today/>\r\n                    <hr/>\r\n                    <Top/>\r\n                </aside>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { ContentFile } from '../components/ContentFile';\r\nimport { config } from '../Constants';\r\nimport { Suggestion } from '../components/Suggestion';\r\n\r\nconst API_URL = config.url.API_URL;\r\n\r\nexport class Content extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            q: '',\r\n            contents: [],\r\n        };\r\n    }\r\n\r\n    async getContents(query = null) {\r\n        await axios.get(API_URL+'/contents',\r\n            {\r\n                params: {\r\n                    q: query\r\n                }\r\n            }).then(response => {\r\n                this.setState({ contents: response.data })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    handleUpdateQuery(e) {\r\n        this.setState({\r\n            q: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSearch(query) {\r\n        this.getContents(query);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getContents();\r\n    }\r\n\r\n    render() {\r\n        return [\r\n            <div key=\"content-list\" className=\"large-6 columns\">\r\n                <div className=\"row column\">\r\n\t\t\t    \t<h4 className=\"text-center\">LATEST</h4>\r\n\t\t  \t    </div>\r\n                <div className=\"row\">\r\n                    <div className=\"small-9 columns\">\r\n                        <input name=\"q\" type=\"text\" onChange={(e) => this.handleUpdateQuery(e)}/>\r\n                    </div>\r\n                    <div className=\"small-3 columns\">\r\n                      <input type=\"submit\" className=\"button expanded\" defaultValue=\"Search\" onClick={() => this.handleSearch(this.state.q)}/>\r\n                    </div>\r\n                </div>\r\n                <a href=\"/content/add\" className=\"button ffab\">Add Something</a>\r\n                {this.state.contents.map(content => (\r\n                    <div className=\"card\" key={content.id}>\r\n                        {/* TODO: put hrefs value */}\r\n                        <ContentFile content={content.id}/>\r\n                        <div className=\"card-section\">\r\n                            <h4><a href=\"#\">{content.title}</a></h4>\r\n                            <p>\r\n                            <span>{ content.description }</span>\r\n                            <br/>\r\n                            <span><i className=\"fi-calendar\">{ content.target_date } &nbsp;&nbsp;</i></span>\r\n                            <br/>\r\n                            <span><i className=\"fi-torso\"> By { content.username }&nbsp;&nbsp;</i></span>\r\n                            <br/>\r\n                            <span><i className=\"fi-comments\">{ content.total_attendees } attendees</i></span>\r\n                            </p>\r\n                            <a href=\"#\" className=\"button small expanded\">Join</a>\r\n                        </div>\r\n                    </div>  \r\n                ))}\r\n                {/* TODO: add pagination, maybe managed by every scroll? */}\r\n            </div>,\r\n            <Suggestion key=\"suggestion\"/>\r\n        ]\r\n    }\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport { Content } from './components/Content';\r\n\r\nfunction App() {\r\n  return (\r\n    <Content/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}